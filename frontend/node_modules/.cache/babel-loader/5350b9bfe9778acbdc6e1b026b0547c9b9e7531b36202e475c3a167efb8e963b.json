{"ast":null,"code":"const API_BASE_URL = 'http://localhost:8000/api';\nexport const nhanVienService = {\n  async getAll() {\n    try {\n      const response = await fetch(`${API_BASE_URL}/nhan-vien`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}`);\n      }\n      const result = await response.json();\n      console.log('API Response:', result);\n\n      // Trả về array employees, không phải object\n      return result.data || result || [];\n    } catch (error) {\n      console.error('Error fetching employees:', error);\n      throw error;\n    }\n  },\n  async create(data) {\n    try {\n      const response = await fetch(`${API_BASE_URL}/nhan-vien`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}`);\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Error creating employee:', error);\n      throw error;\n    }\n  },\n  async update(id, data) {\n    try {\n      const response = await fetch(`${API_BASE_URL}/nhan-vien/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}`);\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Error updating employee:', error);\n      throw error;\n    }\n  },\n  async delete(id) {\n    try {\n      const response = await fetch(`${API_BASE_URL}/nhan-vien/${id}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}`);\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Error deleting employee:', error);\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["API_BASE_URL","nhanVienService","getAll","response","fetch","method","headers","ok","Error","status","result","json","console","log","data","error","create","body","JSON","stringify","update","id","delete"],"sources":["E:/Du_An_300tr/frontend/src/services/nhanVienService.js"],"sourcesContent":["const API_BASE_URL = 'http://localhost:8000/api';\n\nexport const nhanVienService = {\n  async getAll() {\n    try {\n      const response = await fetch(`${API_BASE_URL}/nhan-vien`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n        },\n      });\n      \n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}`);\n      }\n      \n      const result = await response.json();\n      console.log('API Response:', result);\n      \n      // Trả về array employees, không phải object\n      return result.data || result || [];\n    } catch (error) {\n      console.error('Error fetching employees:', error);\n      throw error;\n    }\n  },\n\n  async create(data) {\n    try {\n      const response = await fetch(`${API_BASE_URL}/nhan-vien`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n      \n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}`);\n      }\n      \n      return await response.json();\n    } catch (error) {\n      console.error('Error creating employee:', error);\n      throw error;\n    }\n  },\n\n  async update(id, data) {\n    try {\n      const response = await fetch(`${API_BASE_URL}/nhan-vien/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n      \n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}`);\n      }\n      \n      return await response.json();\n    } catch (error) {\n      console.error('Error updating employee:', error);\n      throw error;\n    }\n  },\n\n  async delete(id) {\n    try {\n      const response = await fetch(`${API_BASE_URL}/nhan-vien/${id}`, {\n        method: 'DELETE',\n      });\n      \n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}`);\n      }\n      \n      return await response.json();\n    } catch (error) {\n      console.error('Error deleting employee:', error);\n      throw error;\n    }\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}