{"ast":null,"code":"const API_BASE_URL = 'http://localhost:8000/api';\nexport const chamCongService = {\n  async registerFace(data) {\n    console.log('üåê API Call - Register Face');\n    const url = `${API_BASE_URL}/cham-cong/register-face`;\n    console.log('üì§ Request URL:', url);\n    console.log('üì§ Request data:', data);\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          nhan_vien_id: data.nhan_vien_id,\n          face_descriptor: data.face_descriptor\n        })\n      });\n      console.log('üì• Response status:', response.status);\n      const rawText = await response.text();\n      console.log('üìÑ Raw response text:', rawText);\n      if (!response.ok) {\n        try {\n          const errorData = JSON.parse(rawText);\n          console.error('‚ùå HTTP Error:', response.status, errorData);\n          throw new Error(errorData.message || `HTTP ${response.status}`);\n        } catch (e) {\n          console.error('‚ùå HTTP Error (non-JSON):', rawText);\n          throw new Error(`HTTP ${response.status}: ${rawText}`);\n        }\n      }\n      const result = JSON.parse(rawText);\n      console.log('üì• Response data:', result);\n      return result;\n    } catch (error) {\n      console.error('üí• Network error (registerFace):', error.message);\n      throw error;\n    }\n  },\n  async checkIn(data) {\n    console.log('üåê API Call - Check In');\n    const url = `${API_BASE_URL}/cham-cong/check-in`;\n    console.log('üì§ Request URL:', url);\n    console.log('üì§ Request data:', data);\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          face_descriptor: data.face_descriptor\n        })\n      });\n      console.log('üì• Response status:', response.status);\n      const rawText = await response.text();\n      console.log('üìÑ Raw response text:', rawText);\n      if (!response.ok) {\n        try {\n          const errorData = JSON.parse(rawText);\n          console.error('‚ùå HTTP Error:', response.status, errorData);\n          throw new Error(errorData.message || `HTTP ${response.status}`);\n        } catch (e) {\n          console.error('‚ùå HTTP Error (non-JSON):', rawText);\n          throw new Error(`HTTP ${response.status}: ${rawText}`);\n        }\n      }\n      const result = JSON.parse(rawText);\n      console.log('üì• Response data:', result);\n      return result;\n    } catch (error) {\n      console.error('üí• Network error (checkIn):', error.message);\n      throw error;\n    }\n  },\n  async getAccessLogs(params) {\n    const query = new URLSearchParams(params).toString();\n    const res = await fetch(`/api/cham-cong/access-logs?${query}`);\n    return res.json();\n  },\n  async getDashboard(params) {\n    const query = new URLSearchParams(params).toString();\n    const res = await fetch(`/api/cham-cong/dashboard?${query}`);\n    return res.json();\n  },\n  async exportExcel(params) {\n    const query = new URLSearchParams(params).toString();\n    const res = await fetch(`/api/cham-cong/export-excel?${query}`);\n    return res.blob();\n  }\n};","map":{"version":3,"names":["API_BASE_URL","chamCongService","registerFace","data","console","log","url","response","fetch","method","headers","body","JSON","stringify","nhan_vien_id","face_descriptor","status","rawText","text","ok","errorData","parse","error","Error","message","e","result","checkIn","getAccessLogs","params","query","URLSearchParams","toString","res","json","getDashboard","exportExcel","blob"],"sources":["E:/Du_An_300tr/frontend/src/services/chamCongService.js"],"sourcesContent":["const API_BASE_URL = 'http://localhost:8000/api';\n\nexport const chamCongService = {\n  async registerFace(data) {\n    console.log('üåê API Call - Register Face');\n    const url = `${API_BASE_URL}/cham-cong/register-face`;\n    console.log('üì§ Request URL:', url);\n    console.log('üì§ Request data:', data);\n\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n        },\n        body: JSON.stringify({\n          nhan_vien_id: data.nhan_vien_id,\n          face_descriptor: data.face_descriptor,\n        }),\n      });\n\n      console.log('üì• Response status:', response.status);\n\n      const rawText = await response.text();\n      console.log('üìÑ Raw response text:', rawText);\n\n      if (!response.ok) {\n        try {\n          const errorData = JSON.parse(rawText);\n          console.error('‚ùå HTTP Error:', response.status, errorData);\n          throw new Error(errorData.message || `HTTP ${response.status}`);\n        } catch (e) {\n          console.error('‚ùå HTTP Error (non-JSON):', rawText);\n          throw new Error(`HTTP ${response.status}: ${rawText}`);\n        }\n      }\n\n      const result = JSON.parse(rawText);\n      console.log('üì• Response data:', result);\n\n      return result;\n\n    } catch (error) {\n      console.error('üí• Network error (registerFace):', error.message);\n      throw error;\n    }\n  },\n\n  async checkIn(data) {\n    console.log('üåê API Call - Check In');\n    const url = `${API_BASE_URL}/cham-cong/check-in`;\n    console.log('üì§ Request URL:', url);\n    console.log('üì§ Request data:', data);\n\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n        },\n        body: JSON.stringify({\n          face_descriptor: data.face_descriptor,\n        }),\n      });\n\n      console.log('üì• Response status:', response.status);\n\n      const rawText = await response.text();\n      console.log('üìÑ Raw response text:', rawText);\n\n      if (!response.ok) {\n        try {\n          const errorData = JSON.parse(rawText);\n          console.error('‚ùå HTTP Error:', response.status, errorData);\n          throw new Error(errorData.message || `HTTP ${response.status}`);\n        } catch (e) {\n          console.error('‚ùå HTTP Error (non-JSON):', rawText);\n          throw new Error(`HTTP ${response.status}: ${rawText}`);\n        }\n      }\n\n      const result = JSON.parse(rawText);\n      console.log('üì• Response data:', result);\n\n      return result;\n\n    } catch (error) {\n      console.error('üí• Network error (checkIn):', error.message);\n      throw error;\n    }\n  },\n  async getAccessLogs(params) {\n    const query = new URLSearchParams(params).toString();\n    const res = await fetch(`/api/cham-cong/access-logs?${query}`);\n    return res.json();\n  },\n  async getDashboard(params) {\n    const query = new URLSearchParams(params).toString();\n    const res = await fetch(`/api/cham-cong/dashboard?${query}`);\n    return res.json();\n  },\n  async exportExcel(params) {\n    const query = new URLSearchParams(params).toString();\n    const res = await fetch(`/api/cham-cong/export-excel?${query}`);\n    return res.blob();\n  },\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}